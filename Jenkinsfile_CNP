#!groovy
import uk.gov.hmcts.contino.AppPipelineDsl

properties([
        [$class: 'GithubProjectProperty',
         displayName: 'Divorce fees and payments Service',
         projectUrlStr: 'https://github.com/hmcts/div-fees-and-payments-service.git'],
        pipelineTriggers([[$class: 'GitHubPushTrigger']])
])

@Library("Infrastructure")

def type = "java"
def product = "div"
def component = "fps"
def channel = '#div-dev'

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [$class     : 'AzureKeyVaultSecret',
     secretType : 'Secret',
     name       : secretName,
     version    : '',
     envVariable: envVar
    ]
}

def secrets = [
        'div-${env}': [
                secret("AppInsightsInstrumentationKey", "azure.application-insights.instrumentation-key")
        ]
]

withPipeline(type , product, component) {
    env.PACT_BROKER_URL = 'https://pact-broker.platform.hmcts.net'
    loadVaultSecrets(secrets)
    enableAksStagingDeployment()
    disableLegacyDeployment()
    enablePactAs([AppPipelineDsl.PactRoles.CONSUMER])

    before('functionalTest:aat') {
        env.ITEST_ENVIRONMENT = "aat"
    }

    before('functionalTest:preview') {
        env.ITEST_ENVIRONMENT = "preview"
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }
    afterSuccess('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }


    afterSuccess('checkout') {
        echo '${product}-${component} checked out'
    }

    afterSuccess('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }
    onMaster {
        env.PACT_BRANCH_NAME='master'
        enableSlackNotifications(channel)
    }
}
